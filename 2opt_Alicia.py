# Funcion que ordena la ruta recibida deacuerdo a las distancias mas cortas partiendo del 0
# Devuelve la ruta optima y distancia total del recorrido
def ordenaruta(ruta,grafoCompleto):
    ruta = sorted(ruta)
    xruta = []
    ruta = [0] + ruta + [0]
    distancia = 0
    if grafoCompleto.get('0'):
        x = 0
        x1 = grafoCompleto.get('0')[ruta[x]]
        d1 = x1[1]
        p1 = x1[0]
        while x < len(ruta):
            dist = grafoCompleto.get('0')[ruta[x]]
            if d1 > dist[1]:
                d1 = dist[1]
                p1 = dist[0]
            x += 1
        print('Punto inicial', p1, d1)  # ya tengo el punto 1 de la ruta
    xruta.append(int(p1))
    distancia = d1
    ruta.remove(int(p1))
    # Debe ser un ciclo mientras se acaba la ruta para buscar los puntos mas cercanos al siguiente
    x = ruta[0]
    print(ruta, x)
    # x = [item for item  in grafoCompleto['5'] if item[0] == '9']
    # print (x[0][1])
    if grafoCompleto.get(str(x)):
        print (grafoCompleto.get(str(x)))
        print (str(p1))
        prueba = grafoCompleto.get(str(x))[int(p1)]
        print (prueba)
        x2 = [0, 1]  # grafoCompleto.get(str([ruta[x]]))
        d2 = x2[1]
        p2 = x2[0]
        print(x2)
        while x < len(ruta):
            dist = [0, 1]  # grafoCompleto.get(str([ruta[x]])p1)
            if d2 > dist[1]:
                d2 = dist[1]
                p2 = dist[0]
            x += 1
        print('Punto siguiente', p2, d2)  # ya tengo el punto 1 de la ruta
    xruta.append(int(p2))
    distancia = d1 + d2
    ruta.remove(int(p2))
    return xruta, distancia

grafoCompleto = {
    '0': [('0', 0), ('1', 14.14), ('2', 10.14), ('3', 7.24), ('4', 15.23), ('5', 18.0), ('6', 22.36), ('7', 25.0),
          ('8', 20.61), ('9', 11.18), ('10', 21.21), ('11', 26.24)],
    '1': [('2', 20.0), ('3', 28.28), ('4', 20.0), ('5', 5.65), ('6', 29.73), ('7', 10.0), ('8', 26.92),
          ('9', 33.54), ('10', 25.0), ('11', 25.49), ('12', 35.05)],
    '2': [('3', 20.0), ('4', 28.28), ('5', 16.49), ('6', 29.73), ('7', 30.0), ('8', 39.05), ('9', 18.02),
          ('10', 15.0), ('11', 7.07), ('12', 15.13)],
    '3': [('4', 20.0), ('5', 28.84), ('6', 12.80), ('7', 36.05), ('8', 30.41), ('9', 11.18), ('10', 5.0),
          ('11', 25.49), ('12', 23.43)],
    '4': [('5', 24.33), ('6', 12.80), ('7', 22.36), ('8', 11.18), ('9', 30.41), ('10', 20.61), ('11', 35.35),
          ('12', 39.35)],
    '5': [('6', 32.55), ('7', 14.56), ('8', 32.20), ('9', 32.20), ('10', 24.83), ('11', 21.02), ('12', 31.57)],
    '6': [('7', 34.40), ('8', 20.22), ('9', 23.85), ('10', 16.40), ('11', 36.24), ('12', 36.06)],
    '7': [('8', 25.0), ('9', 42.72), ('10', 33.54), ('11', 35.35), ('12', 45.04)],
    '8': [('9', 41.23), ('10', 31.62), ('11', 46.09), ('12', 50.53)],
    '9': [('10', 10.0), ('11', 20.61), ('12', 13.92)], '10': [('11', 20.61), ('12', 19.84)], '11': [('12', 12.20)],
    '12': []}
A, B = ordenaruta([4, 5, 9, 6],grafoCompleto)
print (A, B)

grafoCompleto = {'0': [('0', 0), ('1', 14.14), ('2', 10.14), ('3', 7.24), ('4', 15.23), ('5', 18.0), ('6', 22.36), ('7', 25.0), ('8', 20.61), ('9', 11.18), ('10', 21.21), ('11', 26.24)], '1': [('2', 20.0), ('3', 28.28), ('4', 20.0), ('5', 5.65), ('6', 29.73), ('7', 10.0), ('8', 26.92), ('9', 33.54), ('10', 25.0), ('11', 25.49), ('12', 35.05)], '2': [('3', 20.0), ('4', 28.28), ('5', 16.49), ('6', 29.73), ('7', 30.0), ('8', 39.05), ('9', 18.02), ('10', 15.0), ('11', 7.07), ('12', 15.13)], '3': [('4', 20.0), ('5', 28.84), ('6', 12.80), ('7', 36.05), ('8', 30.41), ('9', 11.18), ('10', 5.0), ('11', 25.49), ('12', 23.43)], '4': [('5', 24.33), ('6', 12.80), ('7', 22.36), ('8', 11.18), ('9', 30.41), ('10', 20.61), ('11', 35.35), ('12', 39.35)], '5': [('6', 32.55), ('7', 14.56), ('8', 32.20), ('9', 32.20), ('10', 24.83), ('11', 21.02), ('12', 31.57)], '6': [('7', 34.40), ('8', 20.22), ('9', 23.85), ('10', 16.40), ('11', 36.24), ('12', 36.06)], '7': [('8', 25.0), ('9', 42.72), ('10', 33.54), ('11', 35.35), ('12', 45.04)], '8': [('9', 41.23), ('10', 31.62), ('11', 46.09), ('12', 50.53)], '9': [('10', 10.0), ('11', 20.61), ('12', 13.92)], '10': [('11', 20.61), ('12', 19.84)], '11': [('12', 12.20)], '12': []}
#print (grafoCompleto.get('5'))
#print (grafoCompleto.get('5')[3])
#x = [item for item in grafoCompleto['5'] if item[0] == '9']
#print (x[0][1])